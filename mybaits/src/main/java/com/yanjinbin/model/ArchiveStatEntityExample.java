package com.yanjinbin.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ArchiveStatEntityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table archive_stat
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table archive_stat
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table archive_stat
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    protected Integer limit;

    protected Integer offset;

    /**
     *  构造查询条件,archive_stat
     */
    public ArchiveStatEntityExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     *  设置排序字段,archive_stat
     *
     * @param orderByClause 排序字段
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     *  获取排序字段,archive_stat
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     *  设置过滤重复数据,archive_stat
     *
     * @param distinct 是否过滤重复数据
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     *  是否过滤重复数据,archive_stat
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     *  获取当前的查询条件实例,archive_stat
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * ,archive_stat
     *
     * @param criteria 过滤条件实例
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * ,archive_stat
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     *  创建一个查询条件,archive_stat
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     *  内部构建查询条件对象,archive_stat
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     *  清除查询条件,archive_stat
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        offset = null;
        limit = null;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return this.limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return this.offset;
    }

    public ArchiveStatEntityExample limit(Integer offset) {
        this.offset = offset;
        return this;
    }

    public ArchiveStatEntityExample limit(Integer limit, Integer offset) {
        this.limit = limit;
        this.offset = offset;
        return this;
    }

    public ArchiveStatEntityExample page(Integer page, Integer pageSize) {
        this.limit = page * pageSize;
        this.offset = pageSize;
        return this;
    }

    /**
     * archive_stat
     * GeneratedCriteria
     * 数据库表：archive_stat
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andArchiveStatIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andArchiveStatIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andArchiveStatIdEqualTo(Long value) {
            addCriterion("id =", value, "ArchiveStatId");
            return (Criteria) this;
        }

        public Criteria andArchiveStatIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "ArchiveStatId");
            return (Criteria) this;
        }

        public Criteria andArchiveStatIdGreaterThan(Long value) {
            addCriterion("id >", value, "ArchiveStatId");
            return (Criteria) this;
        }

        public Criteria andArchiveStatIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "ArchiveStatId");
            return (Criteria) this;
        }

        public Criteria andArchiveStatIdLessThan(Long value) {
            addCriterion("id <", value, "ArchiveStatId");
            return (Criteria) this;
        }

        public Criteria andArchiveStatIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "ArchiveStatId");
            return (Criteria) this;
        }

        public Criteria andArchiveStatIdIn(List<Long> values) {
            addCriterion("id in", values, "ArchiveStatId");
            return (Criteria) this;
        }

        public Criteria andArchiveStatIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "ArchiveStatId");
            return (Criteria) this;
        }

        public Criteria andArchiveStatIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "ArchiveStatId");
            return (Criteria) this;
        }

        public Criteria andArchiveStatIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "ArchiveStatId");
            return (Criteria) this;
        }

        public Criteria andLogDateIsNull() {
            addCriterion("log_date is null");
            return (Criteria) this;
        }

        public Criteria andLogDateIsNotNull() {
            addCriterion("log_date is not null");
            return (Criteria) this;
        }

        public Criteria andLogDateEqualTo(Date value) {
            addCriterion("log_date =", value, "logDate");
            return (Criteria) this;
        }

        public Criteria andLogDateNotEqualTo(Date value) {
            addCriterion("log_date <>", value, "logDate");
            return (Criteria) this;
        }

        public Criteria andLogDateGreaterThan(Date value) {
            addCriterion("log_date >", value, "logDate");
            return (Criteria) this;
        }

        public Criteria andLogDateGreaterThanOrEqualTo(Date value) {
            addCriterion("log_date >=", value, "logDate");
            return (Criteria) this;
        }

        public Criteria andLogDateLessThan(Date value) {
            addCriterion("log_date <", value, "logDate");
            return (Criteria) this;
        }

        public Criteria andLogDateLessThanOrEqualTo(Date value) {
            addCriterion("log_date <=", value, "logDate");
            return (Criteria) this;
        }

        public Criteria andLogDateIn(List<Date> values) {
            addCriterion("log_date in", values, "logDate");
            return (Criteria) this;
        }

        public Criteria andLogDateNotIn(List<Date> values) {
            addCriterion("log_date not in", values, "logDate");
            return (Criteria) this;
        }

        public Criteria andLogDateBetween(Date value1, Date value2) {
            addCriterion("log_date between", value1, value2, "logDate");
            return (Criteria) this;
        }

        public Criteria andLogDateNotBetween(Date value1, Date value2) {
            addCriterion("log_date not between", value1, value2, "logDate");
            return (Criteria) this;
        }

        public Criteria andUpFromIsNull() {
            addCriterion("up_from is null");
            return (Criteria) this;
        }

        public Criteria andUpFromIsNotNull() {
            addCriterion("up_from is not null");
            return (Criteria) this;
        }

        public Criteria andUpFromEqualTo(Byte value) {
            addCriterion("up_from =", value, "upFrom");
            return (Criteria) this;
        }

        public Criteria andUpFromNotEqualTo(Byte value) {
            addCriterion("up_from <>", value, "upFrom");
            return (Criteria) this;
        }

        public Criteria andUpFromGreaterThan(Byte value) {
            addCriterion("up_from >", value, "upFrom");
            return (Criteria) this;
        }

        public Criteria andUpFromGreaterThanOrEqualTo(Byte value) {
            addCriterion("up_from >=", value, "upFrom");
            return (Criteria) this;
        }

        public Criteria andUpFromLessThan(Byte value) {
            addCriterion("up_from <", value, "upFrom");
            return (Criteria) this;
        }

        public Criteria andUpFromLessThanOrEqualTo(Byte value) {
            addCriterion("up_from <=", value, "upFrom");
            return (Criteria) this;
        }

        public Criteria andUpFromIn(List<Byte> values) {
            addCriterion("up_from in", values, "upFrom");
            return (Criteria) this;
        }

        public Criteria andUpFromNotIn(List<Byte> values) {
            addCriterion("up_from not in", values, "upFrom");
            return (Criteria) this;
        }

        public Criteria andUpFromBetween(Byte value1, Byte value2) {
            addCriterion("up_from between", value1, value2, "upFrom");
            return (Criteria) this;
        }

        public Criteria andUpFromNotBetween(Byte value1, Byte value2) {
            addCriterion("up_from not between", value1, value2, "upFrom");
            return (Criteria) this;
        }

        public Criteria andArchiveStageIdIsNull() {
            addCriterion("archive_stage_id is null");
            return (Criteria) this;
        }

        public Criteria andArchiveStageIdIsNotNull() {
            addCriterion("archive_stage_id is not null");
            return (Criteria) this;
        }

        public Criteria andArchiveStageIdEqualTo(Byte value) {
            addCriterion("archive_stage_id =", value, "archiveStageId");
            return (Criteria) this;
        }

        public Criteria andArchiveStageIdNotEqualTo(Byte value) {
            addCriterion("archive_stage_id <>", value, "archiveStageId");
            return (Criteria) this;
        }

        public Criteria andArchiveStageIdGreaterThan(Byte value) {
            addCriterion("archive_stage_id >", value, "archiveStageId");
            return (Criteria) this;
        }

        public Criteria andArchiveStageIdGreaterThanOrEqualTo(Byte value) {
            addCriterion("archive_stage_id >=", value, "archiveStageId");
            return (Criteria) this;
        }

        public Criteria andArchiveStageIdLessThan(Byte value) {
            addCriterion("archive_stage_id <", value, "archiveStageId");
            return (Criteria) this;
        }

        public Criteria andArchiveStageIdLessThanOrEqualTo(Byte value) {
            addCriterion("archive_stage_id <=", value, "archiveStageId");
            return (Criteria) this;
        }

        public Criteria andArchiveStageIdIn(List<Byte> values) {
            addCriterion("archive_stage_id in", values, "archiveStageId");
            return (Criteria) this;
        }

        public Criteria andArchiveStageIdNotIn(List<Byte> values) {
            addCriterion("archive_stage_id not in", values, "archiveStageId");
            return (Criteria) this;
        }

        public Criteria andArchiveStageIdBetween(Byte value1, Byte value2) {
            addCriterion("archive_stage_id between", value1, value2, "archiveStageId");
            return (Criteria) this;
        }

        public Criteria andArchiveStageIdNotBetween(Byte value1, Byte value2) {
            addCriterion("archive_stage_id not between", value1, value2, "archiveStageId");
            return (Criteria) this;
        }

        public Criteria andCtimeIsNull() {
            addCriterion("ctime is null");
            return (Criteria) this;
        }

        public Criteria andCtimeIsNotNull() {
            addCriterion("ctime is not null");
            return (Criteria) this;
        }

        public Criteria andCtimeEqualTo(Date value) {
            addCriterion("ctime =", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotEqualTo(Date value) {
            addCriterion("ctime <>", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeGreaterThan(Date value) {
            addCriterion("ctime >", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("ctime >=", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeLessThan(Date value) {
            addCriterion("ctime <", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeLessThanOrEqualTo(Date value) {
            addCriterion("ctime <=", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeIn(List<Date> values) {
            addCriterion("ctime in", values, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotIn(List<Date> values) {
            addCriterion("ctime not in", values, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeBetween(Date value1, Date value2) {
            addCriterion("ctime between", value1, value2, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotBetween(Date value1, Date value2) {
            addCriterion("ctime not between", value1, value2, "ctime");
            return (Criteria) this;
        }

        public Criteria andMtimeIsNull() {
            addCriterion("mtime is null");
            return (Criteria) this;
        }

        public Criteria andMtimeIsNotNull() {
            addCriterion("mtime is not null");
            return (Criteria) this;
        }

        public Criteria andMtimeEqualTo(Date value) {
            addCriterion("mtime =", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeNotEqualTo(Date value) {
            addCriterion("mtime <>", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeGreaterThan(Date value) {
            addCriterion("mtime >", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("mtime >=", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeLessThan(Date value) {
            addCriterion("mtime <", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeLessThanOrEqualTo(Date value) {
            addCriterion("mtime <=", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeIn(List<Date> values) {
            addCriterion("mtime in", values, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeNotIn(List<Date> values) {
            addCriterion("mtime not in", values, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeBetween(Date value1, Date value2) {
            addCriterion("mtime between", value1, value2, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeNotBetween(Date value1, Date value2) {
            addCriterion("mtime not between", value1, value2, "mtime");
            return (Criteria) this;
        }
    }

    /**
     * 类注释
     * Criteria
     * 数据库表：archive_stat
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * archive_stat
     * Criterion
     * 数据库表：archive_stat
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}