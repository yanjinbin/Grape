package com.yanjinbin.model;

import java.io.Serializable;
import java.util.Date;

public class ArchiveEntity implements Serializable {
    /**
     * ID, aid
     * 表字段 : archive.id
     */
    private Integer ArchiveId;

    /**
     * id
     * 表字段 : archive.mid
     */
    private Integer mid;

    /**
     * ID
     * 表字段 : archive.typeid
     */
    private Short typeid;

    /**
     * 用户排行 字段已删除
     * 表字段 : archive.humanrank_delete
     */
    private Integer humanrankDelete;

    /**
     * 点击量 字段已删除
     * 表字段 : archive.click_delete
     */
    private Integer clickDelete;

    /**
     * 稿件标题
     * 表字段 : archive.title
     */
    private String title;

    /**
     * 源标题 字段已删除
     * 表字段 : archive.src_title_delete
     */
    private String srcTitleDelete;

    /**
     * 
     * 表字段 : archive.author
     */
    private String author;

    /**
     * 封面地址
     * 表字段 : archive.cover
     */
    private String cover;

    /**
     * 
     * 表字段 : archive.note
     */
    private String note;

    /**
     * 简介
     * 表字段 : archive.content
     */
    private String content;

    /**
     * 标签
     * 表字段 : archive.tag
     */
    private String tag;

    /**
     * 时长
     * 表字段 : archive.duration
     */
    private Integer duration;

    /**
     * 回查原因
     * 表字段 : archive.reject_reason
     */
    private String rejectReason;

    /**
     * 
     * 表字段 : archive.attribute
     */
    private Integer attribute;

    /**
     *  2-1-0-
     * 表字段 : archive.copyright
     */
    private Byte copyright;

    /**
     * 
     * 表字段 : archive.arealimit
     */
    private Byte arealimit;

    /**
     * 
     * 表字段 : archive.state
     */
    private Integer state;

    /**
     * 
     * 表字段 : archive.access
     */
    private Integer access;

    /**
     * 0-首轮 1-次轮 2-终审
     * 表字段 : archive.round
     */
    private Byte round;

    /**
     * avid
     * 表字段 : archive.forward
     */
    private Integer forward;

    /**
     * 
     * 表字段 : archive.pubtime
     */
    private Date pubtime;

    /**
     * 
     * 表字段 : archive.ctime
     */
    private Date ctime;

    /**
     * 更新时间
     * 表字段 : archive.mtime
     */
    private Date mtime;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table archive
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取 ID, aid 字段:archive.id
     *
     * @return archive.id, ID, aid
     */
    public Integer getArchiveId() {
        return ArchiveId;
    }

    /**
     * 设置 ID, aid 字段:archive.id
     *
     * @param ArchiveId the value for archive.id, ID, aid
     */
    public void setArchiveId(Integer ArchiveId) {
        this.ArchiveId = ArchiveId;
    }

    /**
     * 获取 id 字段:archive.mid
     *
     * @return archive.mid, id
     */
    public Integer getMid() {
        return mid;
    }

    /**
     * 设置 id 字段:archive.mid
     *
     * @param mid the value for archive.mid, id
     */
    public void setMid(Integer mid) {
        this.mid = mid;
    }

    /**
     * 获取 ID 字段:archive.typeid
     *
     * @return archive.typeid, ID
     */
    public Short getTypeid() {
        return typeid;
    }

    /**
     * 设置 ID 字段:archive.typeid
     *
     * @param typeid the value for archive.typeid, ID
     */
    public void setTypeid(Short typeid) {
        this.typeid = typeid;
    }

    /**
     * 获取 用户排行 字段已删除 字段:archive.humanrank_delete
     *
     * @return archive.humanrank_delete, 用户排行 字段已删除
     */
    public Integer getHumanrankDelete() {
        return humanrankDelete;
    }

    /**
     * 设置 用户排行 字段已删除 字段:archive.humanrank_delete
     *
     * @param humanrankDelete the value for archive.humanrank_delete, 用户排行 字段已删除
     */
    public void setHumanrankDelete(Integer humanrankDelete) {
        this.humanrankDelete = humanrankDelete;
    }

    /**
     * 获取 点击量 字段已删除 字段:archive.click_delete
     *
     * @return archive.click_delete, 点击量 字段已删除
     */
    public Integer getClickDelete() {
        return clickDelete;
    }

    /**
     * 设置 点击量 字段已删除 字段:archive.click_delete
     *
     * @param clickDelete the value for archive.click_delete, 点击量 字段已删除
     */
    public void setClickDelete(Integer clickDelete) {
        this.clickDelete = clickDelete;
    }

    /**
     * 获取 稿件标题 字段:archive.title
     *
     * @return archive.title, 稿件标题
     */
    public String getTitle() {
        return title;
    }

    /**
     * 设置 稿件标题 字段:archive.title
     *
     * @param title the value for archive.title, 稿件标题
     */
    public void setTitle(String title) {
        this.title = title == null ? null : title.trim();
    }

    /**
     * 获取 源标题 字段已删除 字段:archive.src_title_delete
     *
     * @return archive.src_title_delete, 源标题 字段已删除
     */
    public String getSrcTitleDelete() {
        return srcTitleDelete;
    }

    /**
     * 设置 源标题 字段已删除 字段:archive.src_title_delete
     *
     * @param srcTitleDelete the value for archive.src_title_delete, 源标题 字段已删除
     */
    public void setSrcTitleDelete(String srcTitleDelete) {
        this.srcTitleDelete = srcTitleDelete == null ? null : srcTitleDelete.trim();
    }

    /**
     * 获取  字段:archive.author
     *
     * @return archive.author, 
     */
    public String getAuthor() {
        return author;
    }

    /**
     * 设置  字段:archive.author
     *
     * @param author the value for archive.author, 
     */
    public void setAuthor(String author) {
        this.author = author == null ? null : author.trim();
    }

    /**
     * 获取 封面地址 字段:archive.cover
     *
     * @return archive.cover, 封面地址
     */
    public String getCover() {
        return cover;
    }

    /**
     * 设置 封面地址 字段:archive.cover
     *
     * @param cover the value for archive.cover, 封面地址
     */
    public void setCover(String cover) {
        this.cover = cover == null ? null : cover.trim();
    }

    /**
     * 获取  字段:archive.note
     *
     * @return archive.note, 
     */
    public String getNote() {
        return note;
    }

    /**
     * 设置  字段:archive.note
     *
     * @param note the value for archive.note, 
     */
    public void setNote(String note) {
        this.note = note == null ? null : note.trim();
    }

    /**
     * 获取 简介 字段:archive.content
     *
     * @return archive.content, 简介
     */
    public String getContent() {
        return content;
    }

    /**
     * 设置 简介 字段:archive.content
     *
     * @param content the value for archive.content, 简介
     */
    public void setContent(String content) {
        this.content = content == null ? null : content.trim();
    }

    /**
     * 获取 标签 字段:archive.tag
     *
     * @return archive.tag, 标签
     */
    public String getTag() {
        return tag;
    }

    /**
     * 设置 标签 字段:archive.tag
     *
     * @param tag the value for archive.tag, 标签
     */
    public void setTag(String tag) {
        this.tag = tag == null ? null : tag.trim();
    }

    /**
     * 获取 时长 字段:archive.duration
     *
     * @return archive.duration, 时长
     */
    public Integer getDuration() {
        return duration;
    }

    /**
     * 设置 时长 字段:archive.duration
     *
     * @param duration the value for archive.duration, 时长
     */
    public void setDuration(Integer duration) {
        this.duration = duration;
    }

    /**
     * 获取 回查原因 字段:archive.reject_reason
     *
     * @return archive.reject_reason, 回查原因
     */
    public String getRejectReason() {
        return rejectReason;
    }

    /**
     * 设置 回查原因 字段:archive.reject_reason
     *
     * @param rejectReason the value for archive.reject_reason, 回查原因
     */
    public void setRejectReason(String rejectReason) {
        this.rejectReason = rejectReason == null ? null : rejectReason.trim();
    }

    /**
     * 获取  字段:archive.attribute
     *
     * @return archive.attribute, 
     */
    public Integer getAttribute() {
        return attribute;
    }

    /**
     * 设置  字段:archive.attribute
     *
     * @param attribute the value for archive.attribute, 
     */
    public void setAttribute(Integer attribute) {
        this.attribute = attribute;
    }

    /**
     * 获取  2-1-0- 字段:archive.copyright
     *
     * @return archive.copyright,  2-1-0-
     */
    public Byte getCopyright() {
        return copyright;
    }

    /**
     * 设置  2-1-0- 字段:archive.copyright
     *
     * @param copyright the value for archive.copyright,  2-1-0-
     */
    public void setCopyright(Byte copyright) {
        this.copyright = copyright;
    }

    /**
     * 获取  字段:archive.arealimit
     *
     * @return archive.arealimit, 
     */
    public Byte getArealimit() {
        return arealimit;
    }

    /**
     * 设置  字段:archive.arealimit
     *
     * @param arealimit the value for archive.arealimit, 
     */
    public void setArealimit(Byte arealimit) {
        this.arealimit = arealimit;
    }

    /**
     * 获取  字段:archive.state
     *
     * @return archive.state, 
     */
    public Integer getState() {
        return state;
    }

    /**
     * 设置  字段:archive.state
     *
     * @param state the value for archive.state, 
     */
    public void setState(Integer state) {
        this.state = state;
    }

    /**
     * 获取  字段:archive.access
     *
     * @return archive.access, 
     */
    public Integer getAccess() {
        return access;
    }

    /**
     * 设置  字段:archive.access
     *
     * @param access the value for archive.access, 
     */
    public void setAccess(Integer access) {
        this.access = access;
    }

    /**
     * 获取 0-首轮 1-次轮 2-终审 字段:archive.round
     *
     * @return archive.round, 0-首轮 1-次轮 2-终审
     */
    public Byte getRound() {
        return round;
    }

    /**
     * 设置 0-首轮 1-次轮 2-终审 字段:archive.round
     *
     * @param round the value for archive.round, 0-首轮 1-次轮 2-终审
     */
    public void setRound(Byte round) {
        this.round = round;
    }

    /**
     * 获取 avid 字段:archive.forward
     *
     * @return archive.forward, avid
     */
    public Integer getForward() {
        return forward;
    }

    /**
     * 设置 avid 字段:archive.forward
     *
     * @param forward the value for archive.forward, avid
     */
    public void setForward(Integer forward) {
        this.forward = forward;
    }

    /**
     * 获取  字段:archive.pubtime
     *
     * @return archive.pubtime, 
     */
    public Date getPubtime() {
        return pubtime;
    }

    /**
     * 设置  字段:archive.pubtime
     *
     * @param pubtime the value for archive.pubtime, 
     */
    public void setPubtime(Date pubtime) {
        this.pubtime = pubtime;
    }

    /**
     * 获取  字段:archive.ctime
     *
     * @return archive.ctime, 
     */
    public Date getCtime() {
        return ctime;
    }

    /**
     * 设置  字段:archive.ctime
     *
     * @param ctime the value for archive.ctime, 
     */
    public void setCtime(Date ctime) {
        this.ctime = ctime;
    }

    /**
     * 获取 更新时间 字段:archive.mtime
     *
     * @return archive.mtime, 更新时间
     */
    public Date getMtime() {
        return mtime;
    }

    /**
     * 设置 更新时间 字段:archive.mtime
     *
     * @param mtime the value for archive.mtime, 更新时间
     */
    public void setMtime(Date mtime) {
        this.mtime = mtime;
    }

    /**
     * ,archive
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", ArchiveId=").append(ArchiveId);
        sb.append(", mid=").append(mid);
        sb.append(", typeid=").append(typeid);
        sb.append(", humanrankDelete=").append(humanrankDelete);
        sb.append(", clickDelete=").append(clickDelete);
        sb.append(", title=").append(title);
        sb.append(", srcTitleDelete=").append(srcTitleDelete);
        sb.append(", author=").append(author);
        sb.append(", cover=").append(cover);
        sb.append(", note=").append(note);
        sb.append(", content=").append(content);
        sb.append(", tag=").append(tag);
        sb.append(", duration=").append(duration);
        sb.append(", rejectReason=").append(rejectReason);
        sb.append(", attribute=").append(attribute);
        sb.append(", copyright=").append(copyright);
        sb.append(", arealimit=").append(arealimit);
        sb.append(", state=").append(state);
        sb.append(", access=").append(access);
        sb.append(", round=").append(round);
        sb.append(", forward=").append(forward);
        sb.append(", pubtime=").append(pubtime);
        sb.append(", ctime=").append(ctime);
        sb.append(", mtime=").append(mtime);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}