package com.yanjinbin.model;

import java.io.Serializable;
import java.util.Date;

public class ArchiveVideoEntity implements Serializable {
    /**
     * 主键
     * 表字段 : archive_video.id
     */
    private Integer ArchiveVideoId;

    /**
     * 分P所属AV号
     * 表字段 : archive_video.aid
     */
    private Integer aid;

    /**
     * 分P标题
     * 表字段 : archive_video.eptitle
     */
    private String eptitle;

    /**
     * 分P简介（250字）
     * 表字段 : archive_video.description
     */
    private String description;

    /**
     * 分P文件hash
     * 表字段 : archive_video.filename
     */
    private String filename;

    /**
     * 分P视频源类型：letv,sina,youku,vupload
     * 表字段 : archive_video.src_type
     */
    private String srcType;

    /**
     * 分P的CID
     * 表字段 : archive_video.cid
     */
    private Integer cid;

    /**
     * 分P播放时长
     * 表字段 : archive_video.duration
     */
    private Integer duration;

    /**
     * 分批文件大小
     * 表字段 : archive_video.filesize
     */
    private Integer filesize;

    /**
     * 视频清晰度集合:flv,mp4,hdmp4,hdflv2
     * 表字段 : archive_video.resolutions
     */
    private String resolutions;

    /**
     * 分批顺序
     * 表字段 : archive_video.index_order
     */
    private Integer indexOrder;

    /**
     * 创建时间
     * 表字段 : archive_video.ctime
     */
    private Date ctime;

    /**
     * 修改时间
     * 表字段 : archive_video.mtime
     */
    private Date mtime;

    /**
     * 视频审核 -30默认 -1待审 -2打回 -4锁定 0通过 10000会员通过
     * 表字段 : archive_video.status
     */
    private Short status;

    /**
     * 渣清播放地址
     * 表字段 : archive_video.playurl
     */
    private String playurl;

    /**
     * 稿件额外属性，比特位状态表示
     * 表字段 : archive_video.attribute
     */
    private Integer attribute;

    /**
     * 视频转码失败原因的枚举值， 0表示尚未转码失败
     * 表字段 : archive_video.failinfo
     */
    private Byte failinfo;

    /**
     * 视频转码情况
     * 表字段 : archive_video.xcode_state
     */
    private Byte xcodeState;

    /**
     * 外部视频网站地址
     * 表字段 : archive_video.weblink
     */
    private String weblink;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table archive_video
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * 获取 主键 字段:archive_video.id
     *
     * @return archive_video.id, 主键
     */
    public Integer getArchiveVideoId() {
        return ArchiveVideoId;
    }

    /**
     * 设置 主键 字段:archive_video.id
     *
     * @param ArchiveVideoId the value for archive_video.id, 主键
     */
    public void setArchiveVideoId(Integer ArchiveVideoId) {
        this.ArchiveVideoId = ArchiveVideoId;
    }

    /**
     * 获取 分P所属AV号 字段:archive_video.aid
     *
     * @return archive_video.aid, 分P所属AV号
     */
    public Integer getAid() {
        return aid;
    }

    /**
     * 设置 分P所属AV号 字段:archive_video.aid
     *
     * @param aid the value for archive_video.aid, 分P所属AV号
     */
    public void setAid(Integer aid) {
        this.aid = aid;
    }

    /**
     * 获取 分P标题 字段:archive_video.eptitle
     *
     * @return archive_video.eptitle, 分P标题
     */
    public String getEptitle() {
        return eptitle;
    }

    /**
     * 设置 分P标题 字段:archive_video.eptitle
     *
     * @param eptitle the value for archive_video.eptitle, 分P标题
     */
    public void setEptitle(String eptitle) {
        this.eptitle = eptitle == null ? null : eptitle.trim();
    }

    /**
     * 获取 分P简介（250字） 字段:archive_video.description
     *
     * @return archive_video.description, 分P简介（250字）
     */
    public String getDescription() {
        return description;
    }

    /**
     * 设置 分P简介（250字） 字段:archive_video.description
     *
     * @param description the value for archive_video.description, 分P简介（250字）
     */
    public void setDescription(String description) {
        this.description = description == null ? null : description.trim();
    }

    /**
     * 获取 分P文件hash 字段:archive_video.filename
     *
     * @return archive_video.filename, 分P文件hash
     */
    public String getFilename() {
        return filename;
    }

    /**
     * 设置 分P文件hash 字段:archive_video.filename
     *
     * @param filename the value for archive_video.filename, 分P文件hash
     */
    public void setFilename(String filename) {
        this.filename = filename == null ? null : filename.trim();
    }

    /**
     * 获取 分P视频源类型：letv,sina,youku,vupload 字段:archive_video.src_type
     *
     * @return archive_video.src_type, 分P视频源类型：letv,sina,youku,vupload
     */
    public String getSrcType() {
        return srcType;
    }

    /**
     * 设置 分P视频源类型：letv,sina,youku,vupload 字段:archive_video.src_type
     *
     * @param srcType the value for archive_video.src_type, 分P视频源类型：letv,sina,youku,vupload
     */
    public void setSrcType(String srcType) {
        this.srcType = srcType == null ? null : srcType.trim();
    }

    /**
     * 获取 分P的CID 字段:archive_video.cid
     *
     * @return archive_video.cid, 分P的CID
     */
    public Integer getCid() {
        return cid;
    }

    /**
     * 设置 分P的CID 字段:archive_video.cid
     *
     * @param cid the value for archive_video.cid, 分P的CID
     */
    public void setCid(Integer cid) {
        this.cid = cid;
    }

    /**
     * 获取 分P播放时长 字段:archive_video.duration
     *
     * @return archive_video.duration, 分P播放时长
     */
    public Integer getDuration() {
        return duration;
    }

    /**
     * 设置 分P播放时长 字段:archive_video.duration
     *
     * @param duration the value for archive_video.duration, 分P播放时长
     */
    public void setDuration(Integer duration) {
        this.duration = duration;
    }

    /**
     * 获取 分批文件大小 字段:archive_video.filesize
     *
     * @return archive_video.filesize, 分批文件大小
     */
    public Integer getFilesize() {
        return filesize;
    }

    /**
     * 设置 分批文件大小 字段:archive_video.filesize
     *
     * @param filesize the value for archive_video.filesize, 分批文件大小
     */
    public void setFilesize(Integer filesize) {
        this.filesize = filesize;
    }

    /**
     * 获取 视频清晰度集合:flv,mp4,hdmp4,hdflv2 字段:archive_video.resolutions
     *
     * @return archive_video.resolutions, 视频清晰度集合:flv,mp4,hdmp4,hdflv2
     */
    public String getResolutions() {
        return resolutions;
    }

    /**
     * 设置 视频清晰度集合:flv,mp4,hdmp4,hdflv2 字段:archive_video.resolutions
     *
     * @param resolutions the value for archive_video.resolutions, 视频清晰度集合:flv,mp4,hdmp4,hdflv2
     */
    public void setResolutions(String resolutions) {
        this.resolutions = resolutions == null ? null : resolutions.trim();
    }

    /**
     * 获取 分批顺序 字段:archive_video.index_order
     *
     * @return archive_video.index_order, 分批顺序
     */
    public Integer getIndexOrder() {
        return indexOrder;
    }

    /**
     * 设置 分批顺序 字段:archive_video.index_order
     *
     * @param indexOrder the value for archive_video.index_order, 分批顺序
     */
    public void setIndexOrder(Integer indexOrder) {
        this.indexOrder = indexOrder;
    }

    /**
     * 获取 创建时间 字段:archive_video.ctime
     *
     * @return archive_video.ctime, 创建时间
     */
    public Date getCtime() {
        return ctime;
    }

    /**
     * 设置 创建时间 字段:archive_video.ctime
     *
     * @param ctime the value for archive_video.ctime, 创建时间
     */
    public void setCtime(Date ctime) {
        this.ctime = ctime;
    }

    /**
     * 获取 修改时间 字段:archive_video.mtime
     *
     * @return archive_video.mtime, 修改时间
     */
    public Date getMtime() {
        return mtime;
    }

    /**
     * 设置 修改时间 字段:archive_video.mtime
     *
     * @param mtime the value for archive_video.mtime, 修改时间
     */
    public void setMtime(Date mtime) {
        this.mtime = mtime;
    }

    /**
     * 获取 视频审核 -30默认 -1待审 -2打回 -4锁定 0通过 10000会员通过 字段:archive_video.status
     *
     * @return archive_video.status, 视频审核 -30默认 -1待审 -2打回 -4锁定 0通过 10000会员通过
     */
    public Short getStatus() {
        return status;
    }

    /**
     * 设置 视频审核 -30默认 -1待审 -2打回 -4锁定 0通过 10000会员通过 字段:archive_video.status
     *
     * @param status the value for archive_video.status, 视频审核 -30默认 -1待审 -2打回 -4锁定 0通过 10000会员通过
     */
    public void setStatus(Short status) {
        this.status = status;
    }

    /**
     * 获取 渣清播放地址 字段:archive_video.playurl
     *
     * @return archive_video.playurl, 渣清播放地址
     */
    public String getPlayurl() {
        return playurl;
    }

    /**
     * 设置 渣清播放地址 字段:archive_video.playurl
     *
     * @param playurl the value for archive_video.playurl, 渣清播放地址
     */
    public void setPlayurl(String playurl) {
        this.playurl = playurl == null ? null : playurl.trim();
    }

    /**
     * 获取 稿件额外属性，比特位状态表示 字段:archive_video.attribute
     *
     * @return archive_video.attribute, 稿件额外属性，比特位状态表示
     */
    public Integer getAttribute() {
        return attribute;
    }

    /**
     * 设置 稿件额外属性，比特位状态表示 字段:archive_video.attribute
     *
     * @param attribute the value for archive_video.attribute, 稿件额外属性，比特位状态表示
     */
    public void setAttribute(Integer attribute) {
        this.attribute = attribute;
    }

    /**
     * 获取 视频转码失败原因的枚举值， 0表示尚未转码失败 字段:archive_video.failinfo
     *
     * @return archive_video.failinfo, 视频转码失败原因的枚举值， 0表示尚未转码失败
     */
    public Byte getFailinfo() {
        return failinfo;
    }

    /**
     * 设置 视频转码失败原因的枚举值， 0表示尚未转码失败 字段:archive_video.failinfo
     *
     * @param failinfo the value for archive_video.failinfo, 视频转码失败原因的枚举值， 0表示尚未转码失败
     */
    public void setFailinfo(Byte failinfo) {
        this.failinfo = failinfo;
    }

    /**
     * 获取 视频转码情况 字段:archive_video.xcode_state
     *
     * @return archive_video.xcode_state, 视频转码情况
     */
    public Byte getXcodeState() {
        return xcodeState;
    }

    /**
     * 设置 视频转码情况 字段:archive_video.xcode_state
     *
     * @param xcodeState the value for archive_video.xcode_state, 视频转码情况
     */
    public void setXcodeState(Byte xcodeState) {
        this.xcodeState = xcodeState;
    }

    /**
     * 获取 外部视频网站地址 字段:archive_video.weblink
     *
     * @return archive_video.weblink, 外部视频网站地址
     */
    public String getWeblink() {
        return weblink;
    }

    /**
     * 设置 外部视频网站地址 字段:archive_video.weblink
     *
     * @param weblink the value for archive_video.weblink, 外部视频网站地址
     */
    public void setWeblink(String weblink) {
        this.weblink = weblink == null ? null : weblink.trim();
    }

    /**
     * ,archive_video
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", ArchiveVideoId=").append(ArchiveVideoId);
        sb.append(", aid=").append(aid);
        sb.append(", eptitle=").append(eptitle);
        sb.append(", description=").append(description);
        sb.append(", filename=").append(filename);
        sb.append(", srcType=").append(srcType);
        sb.append(", cid=").append(cid);
        sb.append(", duration=").append(duration);
        sb.append(", filesize=").append(filesize);
        sb.append(", resolutions=").append(resolutions);
        sb.append(", indexOrder=").append(indexOrder);
        sb.append(", ctime=").append(ctime);
        sb.append(", mtime=").append(mtime);
        sb.append(", status=").append(status);
        sb.append(", playurl=").append(playurl);
        sb.append(", attribute=").append(attribute);
        sb.append(", failinfo=").append(failinfo);
        sb.append(", xcodeState=").append(xcodeState);
        sb.append(", weblink=").append(weblink);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}