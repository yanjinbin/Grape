<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanjinbin.dao.ArchiveStageConfEntityMapper">
  <resultMap id="BaseResultMap" type="com.yanjinbin.model.ArchiveStageConfEntity">
    <!--
    @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="ArchiveStageConfId" />
    <result column="stage_name" jdbcType="VARCHAR" property="stageName" />
    <result column="stage_value" jdbcType="TINYINT" property="stageValue" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="mtime" jdbcType="TIMESTAMP" property="mtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbg.generated
    -->
    id, stage_name, stage_value, ctime, mtime
  </sql>
  <select id="selectByExample" parameterType="com.yanjinbin.model.ArchiveStageConfEntityExample" resultMap="BaseResultMap">
    <!--
    @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from archive_stage_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null">
      <if test="limit != null">
        limit ${limit}, ${offset}
      </if>
      <if test="offset == null">
        limit ${offset}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbg.generated
    -->
    select 
    <include refid="Base_Column_List" />
    from archive_stage_conf
    where id = #{ArchiveStageConfId,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.yanjinbin.model.ArchiveStageConfEntity">
    <!--
    @mbg.generated
    -->
    <selectKey keyProperty="ArchiveStageConfId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into archive_stage_conf (stage_name, stage_value, ctime, 
      mtime)
    values (#{stageName,jdbcType=VARCHAR}, #{stageValue,jdbcType=TINYINT}, #{ctime,jdbcType=TIMESTAMP}, 
      #{mtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yanjinbin.model.ArchiveStageConfEntity">
    <!--
    @mbg.generated
    -->
    <selectKey keyProperty="ArchiveStageConfId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into archive_stage_conf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stageName != null">
        stage_name,
      </if>
      <if test="stageValue != null">
        stage_value,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="mtime != null">
        mtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stageName != null">
        #{stageName,jdbcType=VARCHAR},
      </if>
      <if test="stageValue != null">
        #{stageValue,jdbcType=TINYINT},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        #{mtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yanjinbin.model.ArchiveStageConfEntityExample" resultType="java.lang.Long">
    <!--
    @mbg.generated
    -->
    select count(*) from archive_stage_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbg.generated
    -->
    update archive_stage_conf
    <set>
      <if test="record.ArchiveStageConfId != null">
        id = #{record.ArchiveStageConfId,jdbcType=BIGINT},
      </if>
      <if test="record.stageName != null">
        stage_name = #{record.stageName,jdbcType=VARCHAR},
      </if>
      <if test="record.stageValue != null">
        stage_value = #{record.stageValue,jdbcType=TINYINT},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mtime != null">
        mtime = #{record.mtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbg.generated
    -->
    update archive_stage_conf
    set id = #{record.ArchiveStageConfId,jdbcType=BIGINT},
      stage_name = #{record.stageName,jdbcType=VARCHAR},
      stage_value = #{record.stageValue,jdbcType=TINYINT},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      mtime = #{record.mtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yanjinbin.model.ArchiveStageConfEntity">
    <!--
    @mbg.generated
    -->
    update archive_stage_conf
    <set>
      <if test="stageName != null">
        stage_name = #{stageName,jdbcType=VARCHAR},
      </if>
      <if test="stageValue != null">
        stage_value = #{stageValue,jdbcType=TINYINT},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{ArchiveStageConfId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yanjinbin.model.ArchiveStageConfEntity">
    <!--
    @mbg.generated
    -->
    update archive_stage_conf
    set stage_name = #{stageName,jdbcType=VARCHAR},
      stage_value = #{stageValue,jdbcType=TINYINT},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP}
    where id = #{ArchiveStageConfId,jdbcType=BIGINT}
  </update>
</mapper>